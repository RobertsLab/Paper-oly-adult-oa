scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 14, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=12), axis.title.x = element_text(colour="gray30", size=12), axis.text.x = element_blank(), legend.position = "left", legend.text = element_text(colour="gray30", size=12), legend.title = element_text(colour="gray30", size=12), panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) + guides(color = guide_legend(override.aes = list(size=5.5)), shape = guide_legend(override.aes = list(size=5))) +
ggtitle("Mean larvae released\nper oyster, per day") + ylab("No. larvae") + xlab("Treatment") + scale_y_continuous(label=comma, limits=c(min=0, max=4800))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
spawning_group_sum$pH <- factor(spawning_group_sum$pH, levels=c("Low", "Ambient"))
spawning_group_sum$Temperature <- factor(spawning_group_sum$Temperature, levels=c(10, 6))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
#scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5))
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5))
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
spawning_group_sum$Population
rm(list=ls())         #start script by deleting all objects - clean slate
# Import data, convert groups to date, numeric and factors
larvae <- read.csv("Data/larval-release-data.csv", header = TRUE, na.strings = "n/a", stringsAsFactors = F)
larvae$Date <- as.Date(larvae$Date, "%m/%d/%y")
larvae[c("Vol.counted", "Vol.total", "CountA", "CountB", "CountC", "Larvae.mL", "Tot.Larvae")] <- as.numeric(as.character(unlist(larvae[c("Vol.counted", "Vol.total", "CountA", "CountB", "CountC", "Larvae.mL", "Tot.Larvae")])))
larvae[c("Group", "Spawning.Group", "Population", "Treatment", "Temperature", "pH", "Bucket")] <- lapply(larvae[c("Group", "Spawning.Group", "Population", "Treatment", "Temperature", "pH", "Bucket")], factor)
larvae <- arrange(larvae, Date) %>% mutate(CalDay = format(Date,"%j"))  # Add column with calendar day
# Re-calculate total larvae released to confirm spreadsheet accuracy
larvae$total.released <- round(((rowMeans(larvae[,c("CountA", "CountB", "CountC")], na.rm = TRUE, dims = 1))/larvae$Vol.counted)*larvae$Vol.total, digits = -1)
print(larvae$error <- larvae$total.released - larvae$Tot.Larvae) #looks good, just rounding error
add number of broodstock in each spawning group for normalization
larvae$broodstock <- larvae$Spawning.Group
larvae$broodstock <- gsub("NF-10 Ambient A|NF-6 Ambient A|NF-6 Low B|SN-10 Low A|SN-10 Low B|SN-6 Ambient A|HL-6 Low", 15, larvae$broodstock)
larvae$broodstock <- gsub("NF-10 Ambient B|NF-10 Low A|NF-10 Low B|NF-6 Ambient B|NF-6 Low A|HL-6 Ambient", 14, larvae$broodstock)
larvae$broodstock <- gsub("SN-10 Ambient A|SN-10 Ambient B|SN-6 Low A|SN-6 low A|SN-6 Low B", 17, larvae$broodstock)
larvae$broodstock <- gsub("HL-10 Ambient", 9, larvae$broodstock)
larvae$broodstock <- gsub("SN-6 Ambient B|HL-10 Low", 16, larvae$broodstock)
larvae$broodstock <- gsub("K-10 Ambient", 115, larvae$broodstock)
larvae$broodstock <- gsub("K-10 Low", 111, larvae$broodstock)
larvae$broodstock <- gsub("K-6 Ambient", 117, larvae$broodstock)
larvae$broodstock <- gsub("K-6 Low", 126, larvae$broodstock)
larvae$broodstock <- as.numeric(larvae$broodstock)
#Add mean length for each population for normalization
larvae$mean.length <- larvae$Population
larvae$mean.length <- gsub("NF|SN", 3.6, larvae$mean.length)
larvae$mean.length <- gsub("HL", 3.0, larvae$mean.length)
larvae$mean.length <- gsub("K", 2.2, larvae$mean.length)
larvae$mean.length <- as.numeric(larvae$mean.length)
# Normalize # larvae spawned daily by #broodstock*mean length - result is # larvae per broodstock centimeter
larvae$larvae.per.broodcm <- larvae$total.released/(larvae$broodstock*larvae$mean.length)
# Summary statistics
summarise(larvae, total.by.date = sum(total.released))                                              #total larvae released
summarise(larvae, total.by.date = mean(total.released))                                              #mean larvae released
max(larvae$Tot.Larvae, na.rm=T)
aggregate(Tot.Larvae ~ pH + Temperature, larvae, sum, na.rm=TRUE)/180000                                  #By pH & Temperature
aggregate(Tot.Larvae ~ pH + Temperature + Spawning.Group, larvae, sum, na.rm=TRUE)                      #By population
aggregate(Tot.Larvae ~ Spawning.Group, larvae, sum, na.rm=TRUE)                                     #By population & treatment
aggregate(Tot.Larvae ~ pH + Temperature, larvae, mean, na.rm=TRUE)                                     #Overal daily mean release by population & treatment
aggregate(Tot.Larvae ~ pH + Temperature, larvae, sd, na.rm=TRUE)                                     #Overal daily sd release by population & treatment
aggregate(larvae.per.broodcm ~  pH + Temperature, larvae, sum, na.rm=TRUE)                             #total larvae released by # broodstock
aggregate(larvae.per.broodcm ~ pH + Temperature + Spawning.Group, larvae, sum, na.rm=TRUE)                 #By population & treatment
nrow(subset(larvae, total.released >= 10000))                                                       #Number of times >10k larvae were collected (all grps)
sum(aggregate(broodstock ~ Spawning.Group, subset(larvae), mean)$broodstock)                        #Total # broodstock
# ----- Statistics
# summarize data for each spawning bucket
spawning_group_total <- group_by(larvae, Spawning.Group, Population, Treatment, pH, Temperature) %>% mutate(cum.total=cumsum(total.released),cum.percap = cumsum(larvae.per.broodcm),CalDay = as.numeric(format(Date,"%j"))) %>% arrange(Date) %>% dplyr::select(Date,CalDay,Spawning.Group,Population,Treatment,pH,Temperature,total.released,larvae.per.broodcm,cum.total,cum.percap)
# Summarize data for each treatment treatment, pulling out key dates and summing/averaging larvae
spawning_group_sum <- spawning_group_total %>% group_by(Population, pH, Temperature, Spawning.Group) %>% dplyr::summarize(overall_Total = sum(total.released, na.rm = T), mean.larvae = mean(total.released,na.rm=T), se.larvae = std.error(total.released,na.rm=T), mean.percap = mean(larvae.per.broodcm,na.rm=T), total.percap = sum(larvae.per.broodcm,na.rm=T), maxday = as.numeric(CalDay[which.max(total.released)]), max = max(total.released), max.percap = max(larvae.per.broodcm), first.big = as.numeric(CalDay[which(total.released > 10000)[1]]), release.days = as.numeric(length(CalDay[total.released > 10000])))
# reorder population factors for North->South
spawning_group_sum$Population <- factor(spawning_group_sum$Population, levels=c("NF", "HL", "SN", "K"))
Groups <- levels(larvae$Group)
plot.names <- c("Dabob Bay", "Oyster Bay C2", "Fidalgo Bay", "Oyster Bay C1")
plot.cohort <- levels(fecundity.pop$Population)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=mean.percap, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 14, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=12), axis.title.x = element_text(colour="gray30", size=12), axis.text.x = element_blank(), legend.position = "left", legend.text = element_text(colour="gray30", size=12), legend.title = element_text(colour="gray30", size=12), panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) + guides(color = guide_legend(override.aes = list(size=5.5)), shape = guide_legend(override.aes = list(size=5))) +
ggtitle("Mean larvae released\nper oyster, per day") + ylab("No. larvae") + xlab("Treatment") + scale_y_continuous(label=comma, limits=c(min=0, max=4800))
spawning_group_sum$pH <- factor(spawning_group_sum$pH, levels=c("Low", "Ambient"))
spawning_group_sum$Temperature <- factor(spawning_group_sum$Temperature, levels=c(10, 6))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
spawning_group_sum$Population
# Mean daily release per adult
pdf(file = "Figures/mean-release.pdf", width = 4.5, height = 5.5)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=mean.percap, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 14, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=12), axis.title.x = element_text(colour="gray30", size=12), axis.text.x = element_blank(), legend.position = "left", legend.text = element_text(colour="gray30", size=12), legend.title = element_text(colour="gray30", size=12), panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) + guides(color = guide_legend(override.aes = list(size=5.5)), shape = guide_legend(override.aes = list(size=5))) +
ggtitle("Mean larvae released\nper oyster, per day") + ylab("No. larvae") + xlab("Treatment") + scale_y_continuous(label=comma, limits=c(min=0, max=4800))
dev.off()
spawning_group_sum$pH <- factor(spawning_group_sum$pH, levels=c("Low", "Ambient"))
spawning_group_sum$Temperature <- factor(spawning_group_sum$Temperature, levels=c(10, 6))
# Peak larval release date
pdf(file = "Figures/peak-release.pdf", width = 6, height = 3)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
dev.off()
# Summarize data for each treatment treatment, pulling out key dates and summing/averaging larvae
spawning_group_sum <- spawning_group_total %>% group_by(Population, pH, Temperature, Spawning.Group) %>% dplyr::summarize(overall_Total = sum(total.released, na.rm = T), mean.larvae = mean(total.released,na.rm=T), se.larvae = std.error(total.released,na.rm=T), mean.percap = mean(larvae.per.broodcm,na.rm=T), total.percap = sum(larvae.per.broodcm,na.rm=T), maxday = as.numeric(CalDay[which.max(total.released)]), max = max(total.released), max.percap = max(larvae.per.broodcm), first.big = as.numeric(CalDay[which(total.released > 10000)[1]]), release.days = as.numeric(length(CalDay[total.released > 10000])))
# reorder population factors for North->South
spawning_group_sum$Population <- factor(spawning_group_sum$Population, levels=c("NF", "HL", "SN", "K"))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=mean.percap, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 14, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=12), axis.title.x = element_text(colour="gray30", size=12), axis.text.x = element_blank(), legend.position = "left", legend.text = element_text(colour="gray30", size=12), legend.title = element_text(colour="gray30", size=12), panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) + guides(color = guide_legend(override.aes = list(size=5.5)), shape = guide_legend(override.aes = list(size=5))) +
ggtitle("Mean larvae released\nper oyster, per day") + ylab("No. larvae") + xlab("Treatment") + scale_y_continuous(label=comma, limits=c(min=0, max=4800))
# Mean daily release per adult
pdf(file = "Figures/mean-release.pdf", width = 4.5, height = 5.5)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=mean.percap, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#d1e5f0','#67a9cf','#fddbc7','#ef8a62'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 14, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=12), axis.title.x = element_text(colour="gray30", size=12), axis.text.x = element_blank(), legend.position = "left", legend.text = element_text(colour="gray30", size=12), legend.title = element_text(colour="gray30", size=12), panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) + guides(color = guide_legend(override.aes = list(size=5.5)), shape = guide_legend(override.aes = list(size=5))) +
ggtitle("Mean larvae released\nper oyster, per day") + ylab("No. larvae") + xlab("Treatment") + scale_y_continuous(label=comma, limits=c(min=0, max=4800))
dev.off()
spawning_group_sum$pH <- factor(spawning_group_sum$pH, levels=c("Low", "Ambient"))
spawning_group_sum$Temperature <- factor(spawning_group_sum$Temperature, levels=c(10, 6))
# Peak larval release date
pdf(file = "Figures/peak-release.pdf", width = 6, height = 3)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
dev.off()
# Import deployment latitude and longitude data
locationCords <- read.csv("Data/Population-origin-coordinates.csv", header = T, stringsAsFactors = F) #Import outplant coordinate information
locationCords <- locationCords[order(locationCords$Lat.dec),] #Reorder location coordinates by latittude (south to north)
#marker1 = c("sienna1", "goldenrod1", "steelblue2", "royalblue3") #marker colors for each bay, from south to north
symbols <- c(rep(23, times=7)) #symbol shapes for each bay, south to north
data(nepacLLhigh) #Load set of polygons for the NE Pacific Ocean in high resolution from PBSmapping
# Create base map of coastal WA state
plotMap(nepacLLhigh, xlim = c(-123.4, -121.95), ylim = c(46.95, 48.8), col = "gray92", bg = "gray85", xaxt = "n", yaxt = "n", xlab = "", ylab = "", ann = FALSE) #Create a map with high resolution NE Pacific Ocean data. Remove axes since those will be manually added
# Modify base map
axis(side = 1, at = c(-123, -122.5, -122), labels=c("123°W", "122.5°W", "122°W"), tick = TRUE, col.axis = "grey20") #Add longitude axis
axis(side = 2, at = c(46.5, 47, 47.5, 48, 48.5), labels=c("46.5ºN", "47°N", "47.5°N", "48°N", "48.5°N"), tick = TRUE, col.axis = "grey20") #Add latitude axis
locationCords
locationCords[c(2,3,6,7),]
#Add points to map
for (i in c(2,3,6,7)) {
points(x = locationCords$Long.dec[i], y = locationCords$Lat.dec[i], pch= symbols[i], add = TRUE, bg="gray20", lwd=2, cex=3.5)
text(x = (locationCords$Long.dec[i]), y = (locationCords$Lat.dec[i]), col="white", labels=locationCords$Population[i], font=1, cex=1.2)
}
dev.off() #Turn off plotting device
# Create file to save map
# svg(filename = "results/Deployment-map.svg") # uncomment/comment depending on which file type you want
# pdf(file = "Figures/Population-origin-map.pdf", height = 8.5, width = 8.5)
pdf(file = "Figures/Population-origin-map-graphical-absract.pdf", height = 8.5, width = 8.5)
# Create base map of coastal WA state
plotMap(nepacLLhigh, xlim = c(-123.4, -121.95), ylim = c(46.95, 48.8), col = "gray92", bg = "gray85", xaxt = "n", yaxt = "n", xlab = "", ylab = "", ann = FALSE) #Create a map with high resolution NE Pacific Ocean data. Remove axes since those will be manually added
# Modify base map
axis(side = 1, at = c(-123, -122.5, -122), labels=c("123°W", "122.5°W", "122°W"), tick = TRUE, col.axis = "grey20") #Add longitude axis
axis(side = 2, at = c(46.5, 47, 47.5, 48, 48.5), labels=c("46.5ºN", "47°N", "47.5°N", "48°N", "48.5°N"), tick = TRUE, col.axis = "grey20") #Add latitude axis
#Add points to map
for (i in c(2,3,6,7)) {
points(x = locationCords$Long.dec[i], y = locationCords$Lat.dec[i], pch= symbols[i], add = TRUE, bg="gray20", lwd=2, cex=3.5)
text(x = (locationCords$Long.dec[i]), y = (locationCords$Lat.dec[i]), col="white", labels=locationCords$Population[i], font=1, cex=1.2)
}
dev.off() #Turn off plotting device
locationCords
symbols
# Create base map of coastal WA state
plotMap(nepacLLhigh, xlim = c(-123.4, -121.95), ylim = c(46.95, 48.8), col = "gray92", bg = "gray85", xaxt = "n", yaxt = "n", xlab = "", ylab = "", ann = FALSE) #Create a map with high resolution NE Pacific Ocean data. Remove axes since those will be manually added
# Modify base map
axis(side = 1, at = c(-123, -122.5, -122), labels=c("123°W", "122.5°W", "122°W"), tick = TRUE, col.axis = "grey20") #Add longitude axis
axis(side = 2, at = c(46.5, 47, 47.5, 48, 48.5), labels=c("46.5ºN", "47°N", "47.5°N", "48°N", "48.5°N"), tick = TRUE, col.axis = "grey20") #Add latitude axis
#Add points to map
#for (i in c(2,3,6,7)) {
for (i in 1:length(symbols)) {
points(x = locationCords$Long.dec[i], y = locationCords$Lat.dec[i], pch= symbols[i], add = TRUE, bg="gray20", lwd=2, cex=3.5)
text(x = (locationCords$Long.dec[i]), y = (locationCords$Lat.dec[i]), col="white", labels=locationCords$Population[i], font=1, cex=1.2)
}
# svg(filename = "results/Deployment-map.svg") # uncomment/comment depending on which file type you want
pdf(file = "Figures/Population-origin-map-graphical-absract.pdf", height = 8.5, width = 8.5)
#pdf(file = "Figures/Population-origin-map.pdf", height = 8.5, width = 8.5)
# Create base map of coastal WA state
plotMap(nepacLLhigh, xlim = c(-123.4, -121.95), ylim = c(46.95, 48.8), col = "gray92", bg = "gray85", xaxt = "n", yaxt = "n", xlab = "", ylab = "", ann = FALSE) #Create a map with high resolution NE Pacific Ocean data. Remove axes since those will be manually added
# Modify base map
axis(side = 1, at = c(-123, -122.5, -122), labels=c("123°W", "122.5°W", "122°W"), tick = TRUE, col.axis = "grey20") #Add longitude axis
axis(side = 2, at = c(46.5, 47, 47.5, 48, 48.5), labels=c("46.5ºN", "47°N", "47.5°N", "48°N", "48.5°N"), tick = TRUE, col.axis = "grey20") #Add latitude axis
#Add points to map
for (i in c(2,3,6,7)) {
#for (i in 1:length(symbols)) {
points(x = locationCords$Long.dec[i], y = locationCords$Lat.dec[i], pch= symbols[i], add = TRUE, bg="gray20", lwd=2, cex=3.8)
text(x = (locationCords$Long.dec[i]), y = (locationCords$Lat.dec[i]), col="white", labels=locationCords$Population[i], font=1, cex=1.4)
}
# Add legend
# legend("topleft", inset=0.05, legend=rev(locationCords$Site), cex=0.8, pt.cex = 1.5, pt.bg="gray20", bg="gray92", pch=rev(symbols), box.lty=1, box.lwd=1, box.col="black")
dev.off() #Turn off plotting device
# svg(filename = "results/Deployment-map.svg") # uncomment/comment depending on which file type you want
pdf(file = "Figures/Population-origin-map-graphical-absract.pdf", height = 8.5, width = 8.5)
#pdf(file = "Figures/Population-origin-map.pdf", height = 8.5, width = 8.5)
# Create base map of coastal WA state
plotMap(nepacLLhigh, xlim = c(-123.4, -121.95), ylim = c(46.95, 48.8), col = "gray92", bg = "gray85", xaxt = "n", yaxt = "n", xlab = "", ylab = "", ann = FALSE) #Create a map with high resolution NE Pacific Ocean data. Remove axes since those will be manually added
# Modify base map
axis(side = 1, at = c(-123, -122.5, -122), labels=c("123°W", "122.5°W", "122°W"), tick = TRUE, col.axis = "grey20") #Add longitude axis
axis(side = 2, at = c(46.5, 47, 47.5, 48, 48.5), labels=c("46.5ºN", "47°N", "47.5°N", "48°N", "48.5°N"), tick = TRUE, col.axis = "grey20") #Add latitude axis
#Add points to map
for (i in c(2,3,6,7)) {
#for (i in 1:length(symbols)) {
points(x = locationCords$Long.dec[i], y = locationCords$Lat.dec[i], pch= symbols[i], add = TRUE, bg="gray20", lwd=2, cex=4.0)
text(x = (locationCords$Long.dec[i]), y = (locationCords$Lat.dec[i]), col="white", labels=locationCords$Population[i], font=1, cex=1.6)
}
# Add legend
# legend("topleft", inset=0.05, legend=rev(locationCords$Site), cex=0.8, pt.cex = 1.5, pt.bg="gray20", bg="gray92", pch=rev(symbols), box.lty=1, box.lwd=1, box.col="black")
dev.off() #Turn off plotting device
# Create file to save map
# svg(filename = "results/Deployment-map.svg") # uncomment/comment depending on which file type you want
pdf(file = "Figures/Population-origin-map-graphical-absract.pdf", height = 8.5, width = 8.5)
#pdf(file = "Figures/Population-origin-map.pdf", height = 8.5, width = 8.5)
# Create base map of coastal WA state
plotMap(nepacLLhigh, xlim = c(-123.4, -121.95), ylim = c(46.95, 48.8), col = "gray92", bg = "gray85", xaxt = "n", yaxt = "n", xlab = "", ylab = "", ann = FALSE) #Create a map with high resolution NE Pacific Ocean data. Remove axes since those will be manually added
# Modify base map
axis(side = 1, at = c(-123, -122.5, -122), labels=c("123°W", "122.5°W", "122°W"), tick = TRUE, col.axis = "grey20") #Add longitude axis
axis(side = 2, at = c(46.5, 47, 47.5, 48, 48.5), labels=c("46.5ºN", "47°N", "47.5°N", "48°N", "48.5°N"), tick = TRUE, col.axis = "grey20") #Add latitude axis
#Add points to map
for (i in c(2,3,6,7)) {
#for (i in 1:length(symbols)) {
points(x = locationCords$Long.dec[i], y = locationCords$Lat.dec[i], pch= symbols[i], add = TRUE, bg="gray20", lwd=2, cex=4.1)
text(x = (locationCords$Long.dec[i]), y = (locationCords$Lat.dec[i]), col="white", labels=locationCords$Population[i], font=1, cex=1.6)
}
# Add legend
# legend("topleft", inset=0.05, legend=rev(locationCords$Site), cex=0.8, pt.cex = 1.5, pt.bg="gray20", bg="gray92", pch=rev(symbols), box.lty=1, box.lwd=1, box.col="black")
dev.off() #Turn off plotting device
Oly.size.summary3
Survival.post
Deploy.data
rm(list=ls())         #start script by deleting all objects - clean slate
# Before running scripts, load all needed packages
list.of.packages <- c("ggplot2", "car", "mvoutlier", "dplyr", "reshape2", "stringr", "plotly", "ggpubr", "ggridges", "HH", "pwr", "reshape2", "rcompanion", "lme4", "plotrix", "grid", "gridExtra", "scales", "MASS", "plyr", "PBSmapping", "betareg", "gplots", "corrplot", "cowplot", "tidyr", "colorspace", "tidyverse", "FSA", "ggpmisc") #add new libraries here
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Load all libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
source("Analyses/panelcor.R")
Bucket.Densities <- read.csv("Data/Biweekly-counts.csv", header = F, stringsAsFactors = F, na.strings = c("NA", "#DIV/0!", "#VALUE!"))
colnames(Bucket.Densities) <- Bucket.Densities[2,]
Bucket.Densities <- Bucket.Densities[-1:-2,]
View(subset(Bucket.Densities.wide, Temperature==6 & stocked>0))
# NOTES regarding groups with 2 larval buckets initially:
# NF10-Low, started new bucket on 5/24
# NF10-Ambient, started new bucket on 5/25
# NF6-Low, started new bucket on 5/25
# HL10-Low, started new bucket on 5/26
# SN10-Low, started new bucket on 5/26
# SN10-Ambient, started new bucket on 6/4
# As of 6/9, only 1 bucket per treatment group in bucket counts, so on previous screening day (6/5) conjoined all duplicated groups
# After 6/9, used connected 2-bucket flow-through system to remove dead larvae (dead stayed in 1st bucket, live swan and flowed to 2nd bucket).
# Assign bucket numbers to treatment/population groups
Buckets <- c(3,12,8,10,5,7,16,13,19,21,24,23,22,18,17,20,1,9,11,4)
Groups <- c("NF-10 Ambient", "NF-10 Low", "NF-6 Ambient", "NF-6 Low", "SN-10 Ambient", "SN-10 Low", "SN-6 Ambient", "SN-6 Low", "HL-10 Ambient","HL-10 Low", "HL-6 Ambient", "HL-6 Low", "K-10 Ambient", "K-10 Low","K-6 Ambient", "K-6 Low", "SN-6 Low", "SN-10 Low", "SN-10 Ambient", "NF-10 Low")
Group.Buckets <- as.data.frame(cbind(Buckets, Groups)) #combine density data with bucket info
# ---- Reformat density dataframe, laboriously
Bucket.Densities.long <- na.omit(melt(Bucket.Densities[,-2], id.vars = "Date")) #melt into long format
Bucket.Densities.long$variable <- as.character(Bucket.Densities.long$variable)  #convert count info to character
Bucket.Densities.long[,c("Bucket", "Count")] <- str_split_fixed(Bucket.Densities.long$variable, "\\.", 2) #split bucket/count info
Bucket.Densities.long$Bucket <- as.factor(Bucket.Densities.long$Bucket) #Convert bucket to factor
Bucket.Densities.long$Count <- as.factor(Bucket.Densities.long$Count) #counvert count type to factor
Bucket.Densities.long$Date <- as.Date(Bucket.Densities.long$Date, "%m/%d/%y") #convert date to date format
Bucket.Densities.long$value <- as.numeric(Bucket.Densities.long$value) #convert count data to numeric
# add columns to break up factors (temp, pH, population)
Bucket.Densities.long$Group <- Bucket.Densities.long$Bucket
Bucket.Densities.long <- merge(Bucket.Densities.long, Group.Buckets, by.x = "Bucket", by.y = "Buckets", all.x = T, all.y = T)
Bucket.Densities.long$Bucket.group <- as.factor(paste(Bucket.Densities.long$Bucket,Bucket.Densities.long$Groups))
Bucket.Densities.long$Treatment <- as.factor(gsub(".*-","",Bucket.Densities.long$Groups))
Bucket.Densities.long$Population <- as.factor(gsub("\\-.*","",Bucket.Densities.long$Groups))
Bucket.Densities.long[,c("Temperature", "pH")] <- str_split_fixed(Bucket.Densities.long$Treatment, "\\s+", 2)
Bucket.Densities.long[,"Temperature"] <- as.factor(Bucket.Densities.long[,"Temperature"])
Bucket.Densities.long[,"pH"] <- as.factor(Bucket.Densities.long[,"pH"])
Bucket.Densities.long <- subset(Bucket.Densities.long, value != 0)
# Reformat again to wide, with each bucket density from day to day (includes larvae added, removed, over time)
Bucket.Densities.wide <- dcast(Bucket.Densities.long, Bucket+Date+Population+Treatment+Temperature+pH ~ Count, value.var = "value")
Bucket.Densities.wide$survival <- Bucket.Densities.wide$actual/Bucket.Densities.wide$expected # survival = (larvae out / larvae in)
Bucket.Densities.wide$dead <- Bucket.Densities.wide$expected - Bucket.Densities.wide$actual   # dead = (larvae in - larvae out)
Survival.post.c
Deploy.growth.c
Post.mass.c
Deploy.data.c
Deploy.growth.c
Oly.size.summary3.c
Survival.post
Deploy.data
Deploy.growth
Survival
rm(list=ls())         #start script by deleting all objects - clean slate
# Before running scripts, load all needed packages
list.of.packages <- c("ggplot2", "car", "mvoutlier", "dplyr", "reshape2", "stringr", "plotly", "ggpubr", "ggridges", "HH", "pwr", "reshape2", "rcompanion", "lme4", "plotrix", "grid", "gridExtra", "scales", "MASS", "plyr", "PBSmapping", "betareg", "gplots", "corrplot", "cowplot", "tidyr", "colorspace", "tidyverse", "FSA", "ggpmisc") #add new libraries here
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Load all libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
broodstock.length <- read.csv("Data/broodstock-length-data.csv", header=T, na.strings = NA)
broodstock.length$Length <- as.numeric(as.character(broodstock.length$Length))
broodstock.length$Temperature <- as.factor(as.character(broodstock.length$Temperature))
# read in data
histology <- read.csv("Data/histology_data.csv", header=T, stringsAsFactors = T, na.strings = "NA")
# Convert a few columns to factors & relevel
histology$TEMPERATURE <- as.factor(histology$TEMPERATURE)
histology$Female.Stage <- as.factor(histology$Female.Stage)
histology$Male.Stage <- as.factor(histology$Male.Stage)
histology$Sex.redo <- as.factor(histology$Sex.redo)
histology$Sex.redo <- droplevels(histology$Sex.redo, exclude = "")
histology$Sex.redo <- factor(histology$Sex.redo, levels=c("I", "M", "HPM", "H", "HPF", "F"))
histology$Dom.Stage.redo <- as.factor(histology$Dom.Stage.redo)
histology$Dom.Stage.redo <- droplevels(histology$Dom.Stage.redo, exclude = "#N/A")
histology$PCO2 <- factor(histology$PCO2, levels = c("Pre","High","Amb"))
# make an empty dataframe for test statistic results
# Compare sex ratios between cohorts ... all treatments combined!
CT.stage.pop.allph <- t(table(histology$Dom.Stage.redo, histology$POPULATION))
CT.stage.pop.allph
CT.sex.pop.allph <- t(table(histology$Sex.simple, histology$POPULATION))
CT.male.pop.allph <- t(table(histology$Male.Stage, histology$POPULATION))
CT.female.pop.allph <- t(table(histology$Female.Stage, histology$POPULATION))
# -------  Male gonad stage by each cohort
plot.cohort <- c("NF","HL", "SN", "K", "NF","HL", "SN", "K")
plot.names <- c("Fidalgo Bay","Dabob Bay", "Oyster Bay C1", "Oyster Bay  C2", "Fidalgo Bay","Dabob Bay", "Oyster Bay C1", "Oyster Bay  C2")
plot.temps <- c("6","6","6","6","10","10","10","10")
CT.malestage.pop
CT.malestage.pop <- table(histology$PCO2, histology$Male.Stage, histology$POPULATION, histology$TEMPERATURE)
CT.femstage.pop <- table(histology$PCO2, histology$Female.Stage, histology$POPULATION, histology$TEMPERATURE)
CT.malestage.pop
par(mfrow=c(2,4), oma=c(5,5,0,2), mar=c(0,3,5,0), mgp=c(2.6,0.6,0))
for (i in 1:8) {
barplot(t(prop.table(CT.malestage.pop[,,plot.cohort[i], plot.temps[i]], 1)), xlab=F, las=1, col=c("#f7f7f7", "#cccccc", "#636363", "#252525",  "#969696"), cex.lab=1.4, cex.axis = 1.2, col.axis = "gray30", col.lab = "gray30", legend.text = F)
title(plot.names[i], line = 1, cex.main=1.5, col.main = "gray30", font.main = 1)
}
mtext(side=1,text=(expression(paste(pCO[2], " treatment"))), outer=T,line=3.5, col="gray30", font=1, cex=1.1)
mtext(side=2,text="Proportion Sampled", outer=T,line=0, col="gray30", font=1, cex=1, at=0.2)
mtext(side=2,text="Proportion Sampled", outer=T,line=0, col="gray30", font=1, cex=1, at=0.7)
mtext(side=2,text="6°C Treatment", outer=T,line=2, col="gray30", font=3, cex=1.2, at=0.7)
mtext(side=2,text="10°C Treatment", outer=T,line=2, col="gray30", font=3, cex=1.2, at=0.2)
mtext(side=3,outer=T,line=-2, col="gray30", font=3, cex=1.2, text=expression(paste("Male gamete stage by temperature, ", pCO[2], ", and cohort")))
par(mfrow=c(2,4), oma=c(5,5,0,2), mar=c(0,3,5,0), mgp=c(2.6,0.6,0))
for (i in 1:8) {
barplot(t(prop.table(CT.femstage.pop[,,plot.cohort[i], plot.temps[i]], 1)), xlab=F, las=1, col=c("#f7f7f7", "#cccccc", "#636363", "#252525",  "#969696"), cex.lab=1.4, cex.axis = 1.2, col.axis = "gray30", col.lab = "gray30", legend.text = F)
title(plot.names[i], line = 1, cex.main=1.5, col.main = "gray30", font.main = 1)
}
mtext(side=1,text=(expression(paste(pCO[2], " treatment"))), outer=T,line=3.5, col="gray30", font=1, cex=1.1)
mtext(side=2,text="Proportion Sampled", outer=T,line=0, col="gray30", font=1, cex=1, at=0.2)
mtext(side=2,text="Proportion Sampled", outer=T,line=0, col="gray30", font=1, cex=1, at=0.7)
mtext(side=2,text="6°C Treatment", outer=T,line=2, col="gray30", font=3, cex=1.2, at=0.7)
mtext(side=2,text="10°C Treatment", outer=T,line=2, col="gray30", font=3, cex=1.2, at=0.2)
mtext(side=3,outer=T,line=-2, col="gray30", font=3, cex=1.2, text=expression(paste("Female gamete stage by temperature, ", pCO[2], ", and cohort")))
# Import data, convert groups to date, numeric and factors
larvae <- read.csv("Data/larval-release-data.csv", header = TRUE, na.strings = "n/a", stringsAsFactors = F)
larvae$Date <- as.Date(larvae$Date, "%m/%d/%y")
larvae[c("Vol.counted", "Vol.total", "CountA", "CountB", "CountC", "Larvae.mL", "Tot.Larvae")] <- as.numeric(as.character(unlist(larvae[c("Vol.counted", "Vol.total", "CountA", "CountB", "CountC", "Larvae.mL", "Tot.Larvae")])))
larvae[c("Group", "Spawning.Group", "Population", "Treatment", "Temperature", "pH", "Bucket")] <- lapply(larvae[c("Group", "Spawning.Group", "Population", "Treatment", "Temperature", "pH", "Bucket")], factor)
larvae <- arrange(larvae, Date) %>% mutate(CalDay = format(Date,"%j"))  # Add column with calendar day
rm(list=ls())         #start script by deleting all objects - clean slate
# Before running scripts, load all needed packages
list.of.packages <- c("ggplot2", "car", "mvoutlier", "dplyr", "reshape2", "stringr", "plotly", "ggpubr", "ggridges", "HH", "pwr", "reshape2", "rcompanion", "lme4", "plotrix", "grid", "gridExtra", "scales", "MASS", "plyr", "PBSmapping", "betareg", "gplots", "corrplot", "cowplot", "tidyr", "colorspace", "tidyverse", "FSA", "ggpmisc") #add new libraries here
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Load all libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
# Import data, convert groups to date, numeric and factors
larvae <- read.csv("Data/larval-release-data.csv", header = TRUE, na.strings = "n/a", stringsAsFactors = F)
larvae$Date <- as.Date(larvae$Date, "%m/%d/%y")
larvae[c("Vol.counted", "Vol.total", "CountA", "CountB", "CountC", "Larvae.mL", "Tot.Larvae")] <- as.numeric(as.character(unlist(larvae[c("Vol.counted", "Vol.total", "CountA", "CountB", "CountC", "Larvae.mL", "Tot.Larvae")])))
larvae[c("Group", "Spawning.Group", "Population", "Treatment", "Temperature", "pH", "Bucket")] <- lapply(larvae[c("Group", "Spawning.Group", "Population", "Treatment", "Temperature", "pH", "Bucket")], factor)
larvae <- arrange(larvae, Date) %>% mutate(CalDay = format(Date,"%j"))  # Add column with calendar day
# Re-calculate total larvae released to confirm spreadsheet accuracy
larvae$total.released <- round(((rowMeans(larvae[,c("CountA", "CountB", "CountC")], na.rm = TRUE, dims = 1))/larvae$Vol.counted)*larvae$Vol.total, digits = -1)
print(larvae$error <- larvae$total.released - larvae$Tot.Larvae) #looks good, just rounding error
# --- Normalize # larvae produced by the number of broodstock per spawning group (perbrood). # oysters:
# NF-10 Ambient A = 15
# NF-10 Ambient B = 14
# NF-10 Low A = 14
# NF-10 Low B = 14
# NF-6 Ambient A = 15
# NF-6 Ambient B = 14
# NF-6 Low A = 14
# NF-6 Low B = 15
# SN-10 Ambient A = 17
# SN-10 Ambient B = 17
# SN-10 Low A = 15
# SN-10 Low B = 15
# SN-6 Ambient A = 15
# SN-6 Ambient B = 16
# SN-6 Low A = 17
# SN-6 Low B = 17
# HL-10 Ambient = 9
# HL-10 Low = 16
# HL-6 Ambient = 14
# HL-6 Low = 15
# K-10 Ambient = 115  (K groups were SN-F2's produced by Katherine, younger/smaller and likely inbred)
# K-10 Low = 111
# K-6 Ambient" = 117
# K-6 Low" = 126
# add number of broodstock in each spawning group for normalization
larvae$broodstock <- larvae$Spawning.Group
larvae$broodstock <- gsub("NF-10 Ambient A|NF-6 Ambient A|NF-6 Low B|SN-10 Low A|SN-10 Low B|SN-6 Ambient A|HL-6 Low", 15, larvae$broodstock)
larvae$broodstock <- gsub("NF-10 Ambient B|NF-10 Low A|NF-10 Low B|NF-6 Ambient B|NF-6 Low A|HL-6 Ambient", 14, larvae$broodstock)
larvae$broodstock <- gsub("SN-10 Ambient A|SN-10 Ambient B|SN-6 Low A|SN-6 low A|SN-6 Low B", 17, larvae$broodstock)
larvae$broodstock <- gsub("HL-10 Ambient", 9, larvae$broodstock)
larvae$broodstock <- gsub("SN-6 Ambient B|HL-10 Low", 16, larvae$broodstock)
larvae$broodstock <- gsub("K-10 Ambient", 115, larvae$broodstock)
larvae$broodstock <- gsub("K-10 Low", 111, larvae$broodstock)
larvae$broodstock <- gsub("K-6 Ambient", 117, larvae$broodstock)
larvae$broodstock <- gsub("K-6 Low", 126, larvae$broodstock)
larvae$broodstock <- as.numeric(larvae$broodstock)
#Add mean length for each population for normalization
larvae$mean.length <- larvae$Population
larvae$mean.length <- gsub("NF|SN", 3.6, larvae$mean.length)
larvae$mean.length <- gsub("HL", 3.0, larvae$mean.length)
larvae$mean.length <- gsub("K", 2.2, larvae$mean.length)
larvae$mean.length <- as.numeric(larvae$mean.length)
# Normalize # larvae spawned daily by #broodstock*mean length - result is # larvae per broodstock centimeter
larvae$larvae.per.broodcm <- larvae$total.released/(larvae$broodstock*larvae$mean.length)
# summarize data for each spawning bucket
spawning_group_total <- group_by(larvae, Spawning.Group, Population, Treatment, pH, Temperature) %>% mutate(cum.total=cumsum(total.released),cum.percap = cumsum(larvae.per.broodcm),CalDay = as.numeric(format(Date,"%j"))) %>% arrange(Date) %>% dplyr::select(Date,CalDay,Spawning.Group,Population,Treatment,pH,Temperature,total.released,larvae.per.broodcm,cum.total,cum.percap)
# Summarize data for each treatment treatment, pulling out key dates and summing/averaging larvae
spawning_group_sum <- spawning_group_total %>% group_by(Population, pH, Temperature, Spawning.Group) %>% dplyr::summarize(overall_Total = sum(total.released, na.rm = T), mean.larvae = mean(total.released,na.rm=T), se.larvae = std.error(total.released,na.rm=T), mean.percap = mean(larvae.per.broodcm,na.rm=T), total.percap = sum(larvae.per.broodcm,na.rm=T), maxday = as.numeric(CalDay[which.max(total.released)]), max = max(total.released), max.percap = max(larvae.per.broodcm), first.big = as.numeric(CalDay[which(total.released > 10000)[1]]), release.days = as.numeric(length(CalDay[total.released > 10000])))
# reorder population factors for North->South
spawning_group_sum$Population <- factor(spawning_group_sum$Population, levels=c("NF", "HL", "SN", "K"))
Groups <- levels(larvae$Group)
plot.names <- c("Dabob Bay", "Oyster Bay C2", "Fidalgo Bay", "Oyster Bay C1")
spawning_group_sum$pH <- factor(spawning_group_sum$pH, levels=c("Low", "Ambient"))
spawning_group_sum$Temperature <- factor(spawning_group_sum$Temperature, levels=c(10, 6))
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("Days in reproductive conditioning") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("No. volitional spawning days") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
# Peak larval release date
pdf(file = "Figures/peak-release.pdf", width = 6, height = 3)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("No. volitional spawning days") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
dev.off()
# Peak larval release date
pdf(file = "Figures/peak-release.pdf", width = 6, height = 3)
ggplot(spawning_group_sum, aes(x=Temperature:pH, y=maxday-100, fill=Temperature:pH)) +
geom_boxplot(width=0.35, position = position_dodge(width = .55)) +
scale_fill_manual(values=c('#ef8a62','#fddbc7','#67a9cf','#d1e5f0'), label=c("6°C / Ambient", "6°C / High", "10°C / Ambient","10°C / High"), name="Treatment") +
geom_point(size=2.75, color="gray20", aes(shape=Population, group=Temperature:pH), position=position_jitterdodge(jitter.width = 0.75, jitter.height = .1, dodge.width = 0.5)) +
scale_shape_manual(values=c(15, 17, 19, 8), labels=c("Fidalgo Bay", "Dabob Bay", "Oyster Bay C1", "Oyster Bay C2")) +  theme_bw(base_size = 10) +
theme(plot.title = element_text(size = 15, hjust = 0.5, margin = margin(t = 30, b = 0), colour = "gray30"), axis.title.y = element_text(colour="gray30", size=11), axis.text.y = element_blank(), axis.title.x = element_text(colour="gray30", size=11), axis.text.x = element_text(size=11), legend.position = "none",panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), axis.line.x = element_line(color="gray30", size = .2), axis.line.y = element_line(color="gray30", size = .2)) +
ggtitle("Peak larval release day") + ylab("No. days in spawning tanks") + xlab("Treatment") + scale_y_continuous(limits=c(min=28,max=90), breaks = c(28,42,56,70,86)) + coord_flip()
dev.off()
